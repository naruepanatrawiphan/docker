 docker ps
 docker ps --all
 docker run busybox ping google.com
 docker create busybox ping google.com
 docker run busybox ls
 docker stop
 docker rm
 docker pull sytem
 docker start
 docker exec -it a6c7bf1ee125 sh
 docker exec -it a6c7bf1ee125 bash
 docker run -p 80:80 nginx
 docker run -p 9000:80 nginx
 http://localhost:9000/
 docker run --name myngnix -d -p 3000:80 ngnix
 docker logs 
 docker system df
 docker images
 docker system info
 docker images inspect nginx
 docker image rm 
docker pull wordpress
docker pull mysql:5.7
docker pull phpmyadmin/phpmyadmin

1. docker run --name mysql --network wordpress -e MYSQL_ROOT_PASSWORD=1111 -e MYSQL_DATABSE=wordpress_db -e MYSQL_USER=wordpress -e MYSQL_PASSWORR=wordpress -d mysql:5.7
2. docker run --name pma --network wordpress -p 8888:80 -e PMA_ARBITRARY=1 -d phpmyadmin/phpmyadmin
3. docker run -d --name wordpress --network wordpress -p 888:80 -e WORDPRESS_DB_HOST=mysql -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wordpress_db wordpress\
apt-get update
apt-
docker volume ls
docker volume create wp_volume 
docker volume create mysql_volume
docker volume rm wp_volume mysql_volume

docker run -d --name mysql02 --network wordpress02 -v mysql_volume:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=1111 -e MYSQL_DATABASE=wordpress02_db -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -d mysql:5.7
docker run --name pma02 --network wordpress02 -p 8889:80 -e PMA_ARBITRARY=1 -d phpmyadmin/phpmyadmin
docker run -d --name wordpress02 --network wordpress02 -v wp_volume:/var/www/html -e WORDPRESS_DB_HOST=mysql02 -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wordpress02_db -p 889:80 wordpress
 
 